# CMakeLists.txt to build programs/fltk/gnomonDisplay

IF( WIN32 )
	SET( WIN32_EXTRA_LIBS "comctl32.lib ws2_32.lib" )
ENDIF( WIN32 )

INCLUDE_DIRECTORIES( ${DTK_SOURCE_DIR}/include ${DTK_FLTK_GL_INC_DIRS} )
LINK_DIRECTORIES( ${DTK_FLTK_GL_LINK_DIRS} )
ADD_EXECUTABLE( dtk-gnomonDisplay MACOSX_BUNDLE about.cpp
		dtk-gnomonDisplay.cpp gnomonWindow.cpp mainWindow.cpp )
TARGET_LINK_LIBRARIES( dtk-gnomonDisplay dtk ${DTK_FLTK_GL_LIBS} )
SET_TARGET_PROPERTIES( dtk-gnomonDisplay PROPERTIES
		LINK_FLAGS "${DTK_FLTK_GL_LINK_FLAGS} ${WIN32_EXTRA_LIBS}" )

IF( ${DTK_ARCH_UPPER} MATCHES "DARWIN" )
	SET( CUR_TARGET dtk-gnomonDisplay )
	CONFIGURE_FILE( ${DTK_SOURCE_DIR}/programs/fltk/prog2app.in
			${CMAKE_CURRENT_BINARY_DIR}/prog2app @ONLY )
	ADD_CUSTOM_COMMAND( TARGET ${CUR_TARGET} POST_BUILD
			COMMAND mv prog2app ${CUR_TARGET}
			COMMAND chmod +x ${CUR_TARGET} VERBATIM )
	INSTALL( PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/${CUR_TARGET} DESTINATION
			bin PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ
			GROUP_EXECUTE WORLD_READ WORLD_EXECUTE )
ENDIF( ${DTK_ARCH_UPPER} MATCHES "DARWIN" )

INSTALL( TARGETS dtk-gnomonDisplay RUNTIME DESTINATION bin PERMISSIONS
		OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE
		WORLD_READ WORLD_EXECUTE )

